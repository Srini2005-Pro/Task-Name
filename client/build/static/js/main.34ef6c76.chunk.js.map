{"version":3,"sources":["components/TaskItem.jsx","context/TaskContext.jsx","components/TaskList.jsx","components/SearchBar.jsx","components/CategoryFilter.jsx","pages/Dashboard.jsx","pages/NotFound.jsx","App.jsx","index.jsx"],"names":["TaskItem","_ref","task","onDelete","onToggleComplete","_jsxs","className","completed","children","_jsx","title","description","dueDate","category","onClick","id","TaskContext","createContext","TaskProvider","tasks","setTasks","useState","loading","setLoading","useEffect","async","response","axios","get","data","error","console","fetchTasks","editTask","updatedTask","put","map","_id","Provider","value","addTask","post","deleteTask","delete","filter","toggleCompletion","find","TaskList","useContext","length","SearchBar","onSearch","query","setQuery","onSubmit","event","preventDefault","type","placeholder","onChange","e","target","CategoryFilter","categories","selectedCategory","onCategoryChange","htmlFor","Dashboard","NotFound","App","Router","Switch","Route","exact","path","component","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34ef6c76.chunk.js","sourcesContent":["import React from 'react';\n\nconst TaskItem = ({ task, onDelete, onToggleComplete }) => {\n    return (\n        <div className={`flex justify-between items-center p-4 border-b ${task.completed ? 'bg-green-100' : 'bg-white'}`}>\n            <div>\n                <h3 className=\"text-lg font-semibold\">{task.title}</h3>\n                <p className=\"text-gray-600\">{task.description}</p>\n                <p className=\"text-sm text-gray-500\">{task.dueDate} | {task.category}</p>\n            </div>\n            <div className=\"flex items-center\">\n                <button \n                    onClick={() => onToggleComplete(task.id)} \n                    className={`mr-2 ${task.completed ? 'text-red-500' : 'text-green-500'}`}\n                >\n                    {task.completed ? 'Mark Incomplete' : 'Mark Complete'}\n                </button>\n                <button \n                    onClick={() => onDelete(task.id)} \n                    className=\"text-red-500\"\n                >\n                    Delete\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default TaskItem;","import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport const TaskContext = createContext();\n\nexport const TaskProvider = ({ children }) => {\n    const [tasks, setTasks] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchTasks = async () => {\n            try {\n                const response = await axios.get('/api/tasks');\n                setTasks(response.data);\n            } catch (error) {\n                console.error('Error fetching tasks:', error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchTasks();\n    }, []);\n\n    const addTask = async (task) => {\n        try {\n            const response = await axios.post('/api/tasks', task);\n            setTasks([...tasks, response.data]);\n        } catch (error) {\n            console.error('Error adding task:', error);\n        }\n    };\n\n    const editTask = async (id, updatedTask) => {\n        try {\n            const response = await axios.put(`/api/tasks/${id}`, updatedTask);\n            setTasks(tasks.map(task => (task._id === id ? response.data : task)));\n        } catch (error) {\n            console.error('Error editing task:', error);\n        }\n    };\n\n    const deleteTask = async (id) => {\n        try {\n            await axios.delete(`/api/tasks/${id}`);\n            setTasks(tasks.filter(task => task._id !== id));\n        } catch (error) {\n            console.error('Error deleting task:', error);\n        }\n    };\n\n    const toggleCompletion = async (id) => {\n        const task = tasks.find(task => task._id === id);\n        if (task) {\n            const updatedTask = { ...task, completed: !task.completed };\n            await editTask(id, updatedTask);\n        }\n    };\n\n    return (\n        <TaskContext.Provider value={{ tasks, loading, addTask, editTask, deleteTask, toggleCompletion }}>\n            {children}\n        </TaskContext.Provider>\n    );\n};","import React, { useContext } from 'react';\nimport TaskItem from './TaskItem';\nimport { TaskContext } from '../context/TaskContext';\n\nconst TaskList = () => {\n    const { tasks } = useContext(TaskContext);\n\n    return (\n        <div className=\"task-list\">\n            {tasks.length === 0 ? (\n                <p>No tasks available</p>\n            ) : (\n                tasks.map(task => (\n                    <TaskItem key={task._id} task={task} />\n                ))\n            )}\n        </div>\n    );\n};\n\nexport default TaskList;","import React, { useState } from 'react';\n\nconst SearchBar = ({ onSearch }) => {\n    const [query, setQuery] = useState('');\n\n    const handleSearch = (event) => {\n        event.preventDefault();\n        onSearch(query);\n    };\n\n    return (\n        <form onSubmit={handleSearch} className=\"flex items-center\">\n            <input\n                type=\"text\"\n                placeholder=\"Search tasks...\"\n                value={query}\n                onChange={(e) => setQuery(e.target.value)}\n                className=\"border rounded p-2 mr-2\"\n            />\n            <button type=\"submit\" className=\"bg-blue-500 text-white rounded p-2\">\n                Search\n            </button>\n        </form>\n    );\n};\n\nexport default SearchBar;","import React from 'react';\n\nconst CategoryFilter = ({ categories, selectedCategory, onCategoryChange }) => {\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor=\"category\" className=\"block text-sm font-medium text-gray-700\">Filter by Category</label>\n            <select\n                id=\"category\"\n                value={selectedCategory}\n                onChange={(e) => onCategoryChange(e.target.value)}\n                className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring focus:ring-indigo-500\"\n            >\n                <option value=\"\">All Categories</option>\n                {categories.map((category) => (\n                    <option key={category} value={category}>\n                        {category}\n                    </option>\n                ))}\n            </select>\n        </div>\n    );\n};\n\nexport default CategoryFilter;","import React, { useContext } from 'react';\nimport TaskList from '../components/TaskList';\nimport SearchBar from '../components/SearchBar';\nimport CategoryFilter from '../components/CategoryFilter';\nimport { TaskContext } from '../context/TaskContext';\n\nconst Dashboard = () => {\n    const { tasks } = useContext(TaskContext);\n\n    return (\n        <div className=\"container mx-auto p-4\">\n            <h1 className=\"text-2xl font-bold mb-4\">Task Mate Dashboard</h1>\n            <SearchBar />\n            <CategoryFilter />\n            <TaskList tasks={tasks} />\n        </div>\n    );\n};\n\nexport default Dashboard;","import React from 'react';\n\nconst NotFound = () => {\n    return (\n        <div className=\"flex items-center justify-center h-screen\">\n            <h1 className=\"text-4xl font-bold\">404 - Not Found</h1>\n        </div>\n    );\n};\n\nexport default NotFound;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Dashboard from './pages/Dashboard';\nimport NotFound from './pages/NotFound';\nimport { TaskProvider } from './context/TaskContext';\nimport './index.css';\n\nconst App = () => {\n  return (\n    <TaskProvider>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route component={NotFound} />\n        </Switch>\n      </Router>\n    </TaskProvider>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}