{"ast":null,"code":"import React,{createContext,useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";export const TaskContext=/*#__PURE__*/createContext();export const TaskProvider=_ref=>{let{children}=_ref;const[tasks,setTasks]=useState([]);const[loading,setLoading]=useState(true);useEffect(()=>{const fetchTasks=async()=>{try{const response=await axios.get('/api/tasks');setTasks(response.data);}catch(error){console.error('Error fetching tasks:',error);}finally{setLoading(false);}};fetchTasks();},[]);const addTask=async task=>{try{const response=await axios.post('/api/tasks',task);setTasks([...tasks,response.data]);}catch(error){console.error('Error adding task:',error);}};const editTask=async(id,updatedTask)=>{try{const response=await axios.put(`/api/tasks/${id}`,updatedTask);setTasks(tasks.map(task=>task._id===id?response.data:task));}catch(error){console.error('Error editing task:',error);}};const deleteTask=async id=>{try{await axios.delete(`/api/tasks/${id}`);setTasks(tasks.filter(task=>task._id!==id));}catch(error){console.error('Error deleting task:',error);}};const toggleCompletion=async id=>{const task=tasks.find(task=>task._id===id);if(task){const updatedTask={...task,completed:!task.completed};await editTask(id,updatedTask);}};return/*#__PURE__*/_jsx(TaskContext.Provider,{value:{tasks,loading,addTask,editTask,deleteTask,toggleCompletion},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsx","_jsx","TaskContext","TaskProvider","_ref","children","tasks","setTasks","loading","setLoading","fetchTasks","response","get","data","error","console","addTask","task","post","editTask","id","updatedTask","put","map","_id","deleteTask","delete","filter","toggleCompletion","find","completed","Provider","value"],"sources":["D:/ToDo Web/task-mate/client/src/context/TaskContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport const TaskContext = createContext();\n\nexport const TaskProvider = ({ children }) => {\n    const [tasks, setTasks] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchTasks = async () => {\n            try {\n                const response = await axios.get('/api/tasks');\n                setTasks(response.data);\n            } catch (error) {\n                console.error('Error fetching tasks:', error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchTasks();\n    }, []);\n\n    const addTask = async (task) => {\n        try {\n            const response = await axios.post('/api/tasks', task);\n            setTasks([...tasks, response.data]);\n        } catch (error) {\n            console.error('Error adding task:', error);\n        }\n    };\n\n    const editTask = async (id, updatedTask) => {\n        try {\n            const response = await axios.put(`/api/tasks/${id}`, updatedTask);\n            setTasks(tasks.map(task => (task._id === id ? response.data : task)));\n        } catch (error) {\n            console.error('Error editing task:', error);\n        }\n    };\n\n    const deleteTask = async (id) => {\n        try {\n            await axios.delete(`/api/tasks/${id}`);\n            setTasks(tasks.filter(task => task._id !== id));\n        } catch (error) {\n            console.error('Error deleting task:', error);\n        }\n    };\n\n    const toggleCompletion = async (id) => {\n        const task = tasks.find(task => task._id === id);\n        if (task) {\n            const updatedTask = { ...task, completed: !task.completed };\n            await editTask(id, updatedTask);\n        }\n    };\n\n    return (\n        <TaskContext.Provider value={{ tasks, loading, addTask, editTask, deleteTask, toggleCompletion }}>\n            {children}\n        </TaskContext.Provider>\n    );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}