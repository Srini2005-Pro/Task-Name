{"ast":null,"code":"import React,{useContext}from'react';import TaskItem from'./TaskItem';import{TaskContext}from'../context/TaskContext';import{jsx as _jsx}from\"react/jsx-runtime\";const TaskList=()=>{const{tasks}=useContext(TaskContext);return/*#__PURE__*/_jsx(\"div\",{className:\"task-list\",children:tasks.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No tasks available\"}):tasks.map(task=>/*#__PURE__*/_jsx(TaskItem,{task:task},task._id))});};export default TaskList;","map":{"version":3,"names":["React","useContext","TaskItem","TaskContext","jsx","_jsx","TaskList","tasks","className","children","length","map","task","_id"],"sources":["D:/ToDo Web/task-mate/client/src/components/TaskList.jsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport TaskItem from './TaskItem';\nimport { TaskContext } from '../context/TaskContext';\n\nconst TaskList = () => {\n    const { tasks } = useContext(TaskContext);\n\n    return (\n        <div className=\"task-list\">\n            {tasks.length === 0 ? (\n                <p>No tasks available</p>\n            ) : (\n                tasks.map(task => (\n                    <TaskItem key={task._id} task={task} />\n                ))\n            )}\n        </div>\n    );\n};\n\nexport default TaskList;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,UAAU,KAAQ,OAAO,CACzC,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,OAASC,WAAW,KAAQ,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAErD,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACnB,KAAM,CAAEC,KAAM,CAAC,CAAGN,UAAU,CAACE,WAAW,CAAC,CAEzC,mBACIE,IAAA,QAAKG,SAAS,CAAC,WAAW,CAAAC,QAAA,CACrBF,KAAK,CAACG,MAAM,GAAK,CAAC,cACfL,IAAA,MAAAI,QAAA,CAAG,oBAAkB,CAAG,CAAC,CAEzBF,KAAK,CAACI,GAAG,CAACC,IAAI,eACVP,IAAA,CAACH,QAAQ,EAAgBU,IAAI,CAAEA,IAAK,EAArBA,IAAI,CAACC,GAAkB,CACzC,CACJ,CACA,CAAC,CAEd,CAAC,CAED,cAAe,CAAAP,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}