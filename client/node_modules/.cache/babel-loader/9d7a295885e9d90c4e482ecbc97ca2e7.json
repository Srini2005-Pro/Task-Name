{"ast":null,"code":"var _jsxFileName = \"D:\\\\ToDo Web\\\\task-mate\\\\client\\\\src\\\\components\\\\CategoryFilter.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryFilter = ({\n  categories,\n  selectedCategory,\n  onCategoryChange\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"category\",\n      className: \"block text-sm font-medium text-gray-700\",\n      children: \"Filter by Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"category\",\n      value: selectedCategory,\n      onChange: e => onCategoryChange(e.target.value),\n      className: \"mt-1 block w-full border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring focus:ring-indigo-500\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"All Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: category,\n        children: category\n      }, category, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n_c = CategoryFilter;\nexport default CategoryFilter;\nvar _c;\n$RefreshReg$(_c, \"CategoryFilter\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CategoryFilter","categories","selectedCategory","onCategoryChange","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","value","onChange","e","target","map","category","_c","$RefreshReg$"],"sources":["D:/ToDo Web/task-mate/client/src/components/CategoryFilter.jsx"],"sourcesContent":["import React from 'react';\n\nconst CategoryFilter = ({ categories, selectedCategory, onCategoryChange }) => {\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor=\"category\" className=\"block text-sm font-medium text-gray-700\">Filter by Category</label>\n            <select\n                id=\"category\"\n                value={selectedCategory}\n                onChange={(e) => onCategoryChange(e.target.value)}\n                className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring focus:ring-indigo-500\"\n            >\n                <option value=\"\">All Categories</option>\n                {categories.map((category) => (\n                    <option key={category} value={category}>\n                        {category}\n                    </option>\n                ))}\n            </select>\n        </div>\n    );\n};\n\nexport default CategoryFilter;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAC;EAAEC,UAAU;EAAEC,gBAAgB;EAAEC;AAAiB,CAAC,KAAK;EAC3E,oBACIJ,OAAA;IAAKK,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjBN,OAAA;MAAOO,OAAO,EAAC,UAAU;MAACF,SAAS,EAAC,yCAAyC;MAAAC,QAAA,EAAC;IAAkB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACxGX,OAAA;MACIY,EAAE,EAAC,UAAU;MACbC,KAAK,EAAEV,gBAAiB;MACxBW,QAAQ,EAAGC,CAAC,IAAKX,gBAAgB,CAACW,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAClDR,SAAS,EAAC,mHAAmH;MAAAC,QAAA,gBAE7HN,OAAA;QAAQa,KAAK,EAAC,EAAE;QAAAP,QAAA,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACvCT,UAAU,CAACe,GAAG,CAAEC,QAAQ,iBACrBlB,OAAA;QAAuBa,KAAK,EAAEK,QAAS;QAAAZ,QAAA,EAClCY;MAAQ,GADAA,QAAQ;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAACQ,EAAA,GAnBIlB,cAAc;AAqBpB,eAAeA,cAAc;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}